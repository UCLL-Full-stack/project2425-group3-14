// import Head from "next/head";
import Head from "next/head.js";
import Header from "../../components/header";
import React, { useState } from "react";
import UserService from "@/services/UserService";

const Register: React.FC = () => {

    const [username, setUsername] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [repeatPassword, setRepeatPassword] = useState("");
    const [role] = useState("customer");

    const [error, setError] = useState("");
    const [successMessage, setSuccessMessage] = useState("");
    
    const handleSubmit = async (event: React.FormEvent) => {
        event.preventDefault();
        
        setError("");
        setSuccessMessage("");
        
        if (password.length < 8) {
            setError("Password must be longer than 8 characters long!");
            return;
        }
    
        if (password !== repeatPassword) {
            setError("Passwords do not match!");
            return;
        }
        try {
            const response = await UserService.createUser({username, email, password, role});

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.error || "Registration failed");
            }
            
            const data = await response.json();
            setSuccessMessage("User registered succesfully!");
            setUsername("");
            setEmail("");
            setPassword("");
            setRepeatPassword("");
        } catch (err) {
            setError(err instanceof Error ? err.message : "An unknown error occured");
        }
    };

    return (
        <>
        <Head>
            <title>BookMarkt</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div >
            <Header />
            <main className="p-1 flex-grow flex justify-center items-center">
                <section>
                <h2>Register</h2>
                <form className="form" onSubmit={handleSubmit}>

                    <label htmlFor="username">Username:</label>
                    <input
                    type="text"
                    id="username"
                    name="username"
                    value={username}
                    onChange={(e) => setUsername(e.target.value)}
                    required
                    />

                    <label htmlFor="email">Email:</label>
                    <input
                    type="email"
                    id="email"
                    name="email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                    />

                    <label htmlFor="password">Password:</label>
                    <input
                    type="password"
                    id="password"
                    name="password"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    required
                    />

                    <label htmlFor="repeatPassword">Repeat Password:</label>
                    <input
                    type="password"
                    id="repeatPassword"
                    name="repeatPassword"
                    value={repeatPassword}
                    onChange={(e) => setRepeatPassword(e.target.value)}
                    required
                    />

                    <button type="submit" className="form-button">
                        Register
                    </button>
                </form>
                {error && <p style={{ color: "red" }}>{error}</p>}
                {successMessage && <p style={{ color: "green" }}>{successMessage}</p>}
                <p>Already have an account or want to continue as guest? <a href="/login">login</a></p>
               
                </section>
            </main>
        </div>
        </>
    );
}
export default Register;